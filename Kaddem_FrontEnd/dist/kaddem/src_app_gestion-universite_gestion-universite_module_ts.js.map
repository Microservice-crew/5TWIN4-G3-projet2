{"version":3,"file":"src_app_gestion-universite_gestion-universite_module_ts.js","mappings":"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A0C,gBAAgB,kBAAkB,sCAAsC,aAAa,uBAAuB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS;AAC1vC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yDAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,yBAAyB,2BAA2B,2EAAoB;AACxE;AACA,oBAAoB;AACpB,yBAAyB,2BAA2B,2EAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB;AACxJ,iCAAiC,+DAAwB,GAAG,4JAA4J;AACxN,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,wCAAwC,oKAAoK;AAC/N,QAAQ,6DAAsB;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AAO,kBAAkB,IAAI,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,IAAI,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU,IAAI,KAAK,OAAO,UAAU,IAAI,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB,KAAK,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,IAAI,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uCAAuC,IAAI,qBAAqB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,uCAAuC,IAAI,qBAAqB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,2EAAoB;AAChE;AACA;AACA,uBAAuB;AACvB,4BAA4B,kBAAkB,2BAA2B;AACzE;AACA,sBAAsB;AACtB;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,6DAAqB;AAC9K,iCAAiC,+DAAwB,GAAG,4HAA4H;AACxL,QAAQ,4DAAqB;AAC7B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,2GAA2G;AAClH,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,gEAAgE,wCAAwC,gEAAyB;AACpJ;AACA;AACA,aAAa,oGAAoG;AACjH,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,OAAO,uDAAuD;AAC9D;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,6DAAc,iBAAiB,MAAM,mDAAQ,EAAE;AAC3D;AACA;AACA,eAAe,MAAM,0DAAe,wBAAwB,mBAAmB,IAAI;AACnF,aAAa,MAAM,gDAAK,EAAE;AAC1B,mBAAmB,MAAM,gDAAK,EAAE;AAChC,kBAAkB,MAAM,gDAAK,EAAE;AAC/B;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,yEAA8B;AAC/D,+BAA+B,iEAAsB;AACrD,yCAAyC,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,UAAU,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa,uBAAuB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS;AACvwC,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,6DAAqB;AACxF,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAe;AACjC,kCAAkC,mBAAmB;AACrD,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,uCAAuC,8DAAuB,GAAG,yBAAyB;AAC1F,uCAAuC,8DAAuB,GAAG,WAAW,iEAAa,EAAE,mEAAe,GAAG,iEAAa;AAC1H,QAAQ,mEAAe,GAAG;AAC1B,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA,0BAA0B,iEAAa,EAAE,mEAAe;AACxD;AACA;AACA;AACA;AACA,oBAAoB,iEAAa;AACjC,oBAAoB,mEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,sBAAsB,4BAA4B,8IAA8I,yBAAyB,QAAQ,iEAAa,EAAE,mEAAe,IAAI,yBAAyB,mDAAmD,iEAAa;AACvb,QAAQ,mEAAe,+FAA+F,IAAI;;AAE1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0P","sources":["./src/app/Models/Universite.ts","./src/app/gestion-universite/add-universite/add-universite.component.ts","./src/app/gestion-universite/add-universite/add-universite.component.html","./src/app/gestion-universite/gestion-universite-routing.module.ts","./src/app/gestion-universite/gestion-universite.module.ts","./src/app/gestion-universite/list-universite/list-universite.component.ts","./src/app/gestion-universite/list-universite/list-universite.component.html","./src/app/gestion-universite/stat/stat.component.ts","./src/app/gestion-universite/stat/stat.component.html","./src/app/gestion-universite/update-universite/update-universite.component.ts","./src/app/gestion-universite/update-universite/update-universite.component.html","./src/app/serviceUniversite/service-universite.service.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js"],"sourcesContent":["import { Departement } from \"./Departement\";\r\nimport { FileHandle } from \"./file-handle.model\";\r\n\r\nexport class universite{\r\n  idUniv!:number;\r\n    nomUniv!:string;\r\n    departements!:Departement[];\r\n    images!:FileHandle[];\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, NgForm, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { universite } from 'src/app/Models/Universite';\r\nimport { Departement } from 'src/app/Models/Departement';\r\nimport { ServiceDepartService } from 'src/app/service-depart.service';\r\nimport { ServiceUniversiteService } from 'src/app/serviceUniversite/service-universite.service';\r\nimport { FileHandle } from 'src/app/Models/file-handle.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-add-universite',\r\n  templateUrl: './add-universite.component.html',\r\n  styleUrls: ['./add-universite.component.css']\r\n})\r\nexport class AddUniversiteComponent implements OnInit {\r\n  list:any[]=[];\r\n  selectedObject !:Departement;\r\n  theValue!:any;\r\n  maxId!:number;\r\n \r\n  u: universite =new universite();\r\n  o:any;\r\n \r\n  universite:universite={\r\n    idUniv:0,\r\n    nomUniv:\"\",\r\n    departements:[],\r\n    images:[]\r\n}\r\n   \r\n  constructor(private serviceDepar:ServiceDepartService,private serviceUniv:ServiceUniversiteService,private R:Router,private fb:FormBuilder,private sanitizer:DomSanitizer) { }\r\n  \r\n  \r\n  reactiveForm=this.fb.group(\r\n    {\r\n       \r\n      nomUniv:['',[Validators.required]],\r\n      //departements: [],\r\n    }\r\n  );\r\n\r\n  ngOnInit(): void {\r\n    this.getListDepart();\r\n    this.getmaxid();\r\n  }\r\n  getListDepart(){\r\n    this.serviceUniv.listedepart().subscribe(\r\n      data=>{this.list=data;\r\n      //console.log(this.list);\r\n    }\r\n    )     \r\n  }\r\n  onFileSelected(event:any){\r\n   console.log(event);\r\nif(event.target.files){\r\n  const file=event.target.files[0]; \r\n  const FileHandle:FileHandle={\r\n    file: file,\r\n    url:this.sanitizer.bypassSecurityTrustUrl(\r\n      window.URL.createObjectURL(file)\r\n    )\r\n  }\r\nthis.universite.images.push(FileHandle);\r\nalert(this.universite.images)\r\n}\r\n  }\r\n  // add with image\r\n   \r\n  Add(){\r\n    \r\n    const c=this.prepareFormData(this.universite)\r\n  \r\n    this.serviceUniv.addWithImage(c).subscribe( data=>{\r\n      this.serviceUniv.relationdepart(this.maxId+1,this.selectedObject.idDepart).subscribe();}\r\n    );\r\n   \r\n    this.R.navigate(['listUniv'])\r\n  }\r\n    \r\nprepareFormData(univer:universite):FormData{\r\n  const formData=new FormData();\r\n    formData.append(\r\n      'universite',new Blob([JSON.stringify(univer)],{type:'application/json'})\r\n    );\r\n     for(let i=0;i<univer.images.length;i++) {\r\n      formData.append(\r\n        'imageFile',\r\n        univer.images[i].file,\r\n        univer.images[i].file.name\r\n      );\r\n     }\r\n     return formData;\r\n}\r\nremoveImage(i:number){\r\nthis.universite.images.splice(i,1);\r\n}\r\n    // add without image \r\n    /*\r\nAdd(){\r\n//alert(\"add\" +this.selectedObject.idDepart+\"kkkkkkkkkkkkkk\"+this.maxId);\r\n\r\n\r\n \r\n  this.serviceUniv.AddUniv(this.universite).subscribe(data =>{\r\n  \r\n  })\r\n  \r\n \r\n  this.serviceUniv.relationdepart(this.maxId+1,this.selectedObject.idDepart).subscribe(data=>{\r\n\r\n  })\r\n  this.R.navigate(['listUniv'])\r\n} */\r\ngetmaxid(){\r\n  return this.serviceUniv.getmaxid().subscribe(\r\n    data=>{\r\n      this.maxId=data;\r\n      console.log(this.maxId)\r\n    }\r\n  )\r\n  ;\r\n}\r\nget nomUniv(){\r\n  return this.reactiveForm.get('nomUniv')\r\n}\r\nnumSequence(n: number): Array<number> {\r\n  return Array(n);\r\n}\r\n \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n    <div class=\"card\">\r\n    <div class=\"card-body\">\r\n    \r\n    \r\n    <h2>Ajouter universite</h2>\r\n<form >\r\n\r\n    <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Nom universite</h4>\r\n        <div class=\"mt-4\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [(ngModel)]=\"universite.nomUniv\" class=\"form-control\" name=\"nomUniv\"  id=\"nomUniv\" required >\r\n            </div>\r\n             <div class=\"alter alter-danger\" *ngIf=\"nomUniv?.errors?.['required'] && nomUniv?.touched\"> idDepart is required</div>\r\n     \r\n        </div >\r\n    </div>\r\n   \r\n</form>\r\n \r\n<h4 class=\"card-title\">Nom Departement</h4>\r\n <div *ngFor=\"let n of numSequence(theValue)\">\r\n    <select  [(ngModel)]=\"selectedObject\">\r\n        <option *ngFor=\"let c of list\"  [ngValue]=\"c\" >{{c.nomDepart}}</option>\r\n\r\n    </select>\r\n</div>\r\n<div>\r\n    <input type=\"file\" multiple value=\"select\" #selectFile \r\n    (change)=\"onFileSelected($event)\"\r\n    >\r\n</div> <br><br>\r\n\r\n<div>\r\n    <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n        <mat-grid-tile *ngFor=\"let file of universite.images; let i=index;\">\r\n            <div>\r\n                <span class=\"btn-remove-image\" (click)=\"removeImage(i)\">x</span>\r\n              \r\n            <img [src]=\"file.url\" width=\"100px\" height=\"100px\">\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"Add()\">Ajouter</button>\r\n</div>\r\n</div>\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddUniversiteComponent } from './add-universite/add-universite.component';\r\nimport { ListUniversiteComponent } from './list-universite/list-universite.component';\r\nimport { StatComponent } from './stat/stat.component';\r\nimport { UpdateUniversiteComponent } from './update-universite/update-universite.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component:ListUniversiteComponent},\r\n  {path: 'add', component:AddUniversiteComponent},\r\n  {path: 'update/:idUniv', component:UpdateUniversiteComponent},\r\n  {path: 'stat',component:StatComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GestionUniversiteRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GestionUniversiteRoutingModule } from './gestion-universite-routing.module';\r\nimport { ListUniversiteComponent } from './list-universite/list-universite.component';\r\nimport { AddUniversiteComponent } from './add-universite/add-universite.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UpdateUniversiteComponent } from './update-universite/update-universite.component';\r\nimport { StatComponent } from './stat/stat.component';\r\n/***************************ANGULAR MATERIEL ADDED*************************** */\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIcon, MatIconModule} from '@angular/material/icon';\r\nimport {MatInput, MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\n/*************************** END MATERIAL ADDED*************************** */\r\n@NgModule({\r\n  declarations: [\r\n    ListUniversiteComponent,\r\n    AddUniversiteComponent,\r\n    UpdateUniversiteComponent,\r\n    StatComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    GestionUniversiteRoutingModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    MatGridListModule ,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatExpansionModule\r\n  ]\r\n})\r\nexport class GestionUniversiteModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { universite } from 'src/app/Models/Universite';\r\nimport { ServiceUniversiteService } from 'src/app/serviceUniversite/service-universite.service';\r\n\r\n@Component({\r\n  selector: 'app-list-universite',\r\n  templateUrl: './list-universite.component.html',\r\n  styleUrls: ['./list-universite.component.css']\r\n})\r\nexport class ListUniversiteComponent implements OnInit {\r\n  list:universite[]=[];\r\n // pages!:Array<number>;\r\n  constructor(private serviceUniv:ServiceUniversiteService,private R:Router) { }\r\npages=[0,1,2,3,4]\r\npage=0;\r\nlibelle:string=\"\";\r\n  ngOnInit(): void {\r\n   this.getListUniv();\r\n  }\r\n  setpage(i:number,event:any){\r\n   // event.prevendDefault();\r\n    this.page=i;\r\n   // alert(this.page)\r\n    this.getWtithpagination();\r\n  }\r\n  getListUniv(){\r\n    this.serviceUniv.getData().subscribe(\r\n      data=>{this.list=data;\r\n      //console.log(this.list);\r\n     \r\n    }\r\n    )\r\n      \r\n  }\r\n \r\n  getWtithpagination(){\r\n   // alert(this.page)\r\n    this.serviceUniv.getWtithpagination(this.page).subscribe(data=>{\r\n      this.list=data;\r\n    \r\n    });\r\n  }\r\n  DeleteUniv(id:number)\r\n  {\r\n   \r\nthis.serviceUniv.delete(id).subscribe(\r\n  data =>  {\r\n  console.log(data);\r\nthis.getListUniv();\r\n});} \r\n}\r\n","\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div id=\"searchBar\">\r\n    \r\n                <!-- BARRE DE RECHERCHE-->\r\n                  <mat-form-field class=\"searchBar\">\r\n                    <input\r\n                      matInput\r\n                      placeholder=\"Search\"\r\n                      type=\"search\"\r\n                      class=\"align-text\"\r\n                      [(ngModel)]=\"libelle\"\r\n                    />\r\n                    <span matSuffix><mat-icon>search</mat-icon></span>\r\n                  </mat-form-field>\r\n                  <button mat-raised-button color=\"primary\" id=\"addButton\" routerLink=\"add\">Ajouter universite</button>\r\n                </div>\r\n                <div id=\"table-container\">\r\n                    <div >\r\n                        <!-- 5EDMET MOEZ -->\r\n                        <table class=\" table table-striped  table-hover mat-elevation-z8\">\r\n                            <tr>\r\n                                <th>ID</th>\r\n                          \r\n                                <th>nom Universite</th>\r\n                                <th>nom Departement</th>\r\n                                <th>Action</th>\r\n                          \r\n                            </tr>\r\n                            <ng-container *ngFor=\"let e of list\"> \r\n                                <tr [hidden]=\"\r\n                                !(e.nomUniv.toUpperCase().indexOf(libelle.toUpperCase()) != -1)\r\n                              \">\r\n                                    <td>\r\n                                        {{e.idUniv}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{e.nomUniv}}\r\n                                    </td>\r\n                                    <div *ngFor=\"let a of e.departements\" >\r\n                                      <td>{{a.nomDepart}}</td>\r\n                                    </div>\r\n                                    <td>\r\n                                        <button\r\n                                          mat-button\r\n                                          aria-label=\"Modify\"\r\n                                          matTooltip=\"Edit infos\"\r\n                                          [routerLink]=\"['update',e.idUniv]\"\r\n                                        >\r\n                                          <mat-icon>edit</mat-icon>\r\n                                        </button>\r\n                                        <button\r\n                                          mat-button\r\n                                          aria-label=\"Delete\"\r\n                                          matTooltip=\"Delete\"\r\n                                          matTooltipClass=\"example-tooltip-red\"\r\n                                          (click)=\"DeleteUniv(e.idUniv)\"\r\n                                        >\r\n                                          <mat-icon>delete</mat-icon>\r\n                                        </button>\r\n                                      </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <ul class=\"pagination\"><li class=\"paginate_button page-item previous disabled\" id=\"default_order_previous\">\r\n                            <a aria-controls=\"default_order\" data-dt-idx=\"0\" tabindex=\"0\" class=\"page-link\">Previous</a>\r\n                        </li><li class=\"paginate_button page-item\" *ngFor=\"let p of pages; let i=index\">\r\n                          \r\n                            <button aria-controls=\"default_order\" data-dt-idx=\"1\" tabindex=\"0\" class=\"page-link\" (click)=\"setpage(p,$event)\">{{p}}</button>\r\n                        </li>\r\n                        <li class=\"paginate_button page-item next\" id=\"default_order_next\"><a href=\"#\" aria-controls=\"default_order\" data-dt-idx=\"7\" tabindex=\"0\" class=\"page-link\">Next</a></li></ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stat',\r\n  templateUrl: './stat.component.html',\r\n  styleUrls: ['./stat.component.css']\r\n})\r\nexport class StatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card-body\">\r\n    <h4 class=\"card-title\">Total Sales</h4>\r\n    <div id=\"campaign-v2\" class=\"mt-2 c3\" style=\"height: 283px; width: 100%; max-height: 283px; position: relative;\"><svg width=\"565.6000366210938\" height=\"283\" style=\"overflow: hidden;\"><defs><clipPath id=\"c3-1670959740832-clip\"><rect width=\"565.6000366210938\" height=\"259\"></rect></clipPath><clipPath id=\"c3-1670959740832-clip-xaxis\"><rect x=\"-31\" y=\"-20\" width=\"627.6000366210938\" height=\"40\"></rect></clipPath><clipPath id=\"c3-1670959740832-clip-yaxis\"><rect x=\"-29\" y=\"-4\" width=\"20\" height=\"283\"></rect></clipPath><clipPath id=\"c3-1670959740832-clip-grid\"><rect width=\"565.6000366210938\" height=\"259\"></rect></clipPath><clipPath id=\"c3-1670959740832-clip-subchart\"><rect width=\"565.6000366210938\"></rect></clipPath></defs><g transform=\"translate(0.5,4.5)\"><text class=\"c3-text c3-empty\" text-anchor=\"middle\" dominant-baseline=\"middle\" x=\"282.8000183105469\" y=\"129.5\" style=\"opacity: 0;\"></text><rect class=\"c3-zoom-rect\" width=\"565.6000366210938\" height=\"259\" style=\"opacity: 0;\"></rect><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip)\" class=\"c3-regions\" style=\"visibility: hidden;\"></g><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-grid)\" class=\"c3-grid\" style=\"visibility: hidden;\"><g class=\"c3-xgrid-focus\"><line class=\"c3-xgrid-focus\" x1=\"-10\" x2=\"-10\" y1=\"0\" y2=\"259\" style=\"visibility: hidden;\"></line></g></g><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip)\" class=\"c3-chart\"><g class=\"c3-event-rects c3-event-rects-single\" style=\"fill-opacity: 0;\"><rect class=\" c3-event-rect c3-event-rect-0\" x=\"0.199981689453125\" y=\"0\" width=\"565.6000366210938\" height=\"259\"></rect></g><g class=\"c3-chart-bars\"><g class=\"c3-chart-bar c3-target c3-target-Direct-Sales\" style=\"pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Direct-Sales c3-bars c3-bars-Direct-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-bar c3-target c3-target-Referral-Sales\" style=\"pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Referral-Sales c3-bars c3-bars-Referral-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-bar c3-target c3-target-Afilliate-Sales\" style=\"pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Afilliate-Sales c3-bars c3-bars-Afilliate-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-bar c3-target c3-target-Indirect-Sales\" style=\"pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Indirect-Sales c3-bars c3-bars-Indirect-Sales\" style=\"cursor: pointer;\"></g></g></g><g class=\"c3-chart-lines\"><g class=\"c3-chart-line c3-target c3-target-Direct-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Direct-Sales c3-lines c3-lines-Direct-Sales\"></g><g class=\" c3-shapes c3-shapes-Direct-Sales c3-areas c3-areas-Direct-Sales\"></g><g class=\" c3-selected-circles c3-selected-circles-Direct-Sales\"></g><g class=\" c3-shapes c3-shapes-Direct-Sales c3-circles c3-circles-Direct-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-line c3-target c3-target-Referral-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Referral-Sales c3-lines c3-lines-Referral-Sales\"></g><g class=\" c3-shapes c3-shapes-Referral-Sales c3-areas c3-areas-Referral-Sales\"></g><g class=\" c3-selected-circles c3-selected-circles-Referral-Sales\"></g><g class=\" c3-shapes c3-shapes-Referral-Sales c3-circles c3-circles-Referral-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-line c3-target c3-target-Afilliate-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Afilliate-Sales c3-lines c3-lines-Afilliate-Sales\"></g><g class=\" c3-shapes c3-shapes-Afilliate-Sales c3-areas c3-areas-Afilliate-Sales\"></g><g class=\" c3-selected-circles c3-selected-circles-Afilliate-Sales\"></g><g class=\" c3-shapes c3-shapes-Afilliate-Sales c3-circles c3-circles-Afilliate-Sales\" style=\"cursor: pointer;\"></g></g><g class=\"c3-chart-line c3-target c3-target-Indirect-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-shapes c3-shapes-Indirect-Sales c3-lines c3-lines-Indirect-Sales\"></g><g class=\" c3-shapes c3-shapes-Indirect-Sales c3-areas c3-areas-Indirect-Sales\"></g><g class=\" c3-selected-circles c3-selected-circles-Indirect-Sales\"></g><g class=\" c3-shapes c3-shapes-Indirect-Sales c3-circles c3-circles-Indirect-Sales\" style=\"cursor: pointer;\"></g></g></g><g class=\"c3-chart-arcs\" transform=\"translate(282.8000183105469,124.5)\"><text class=\"c3-chart-arcs-title\" style=\"text-anchor: middle; opacity: 1; font-family: Rubik;\">Sales</text><g class=\"c3-chart-arc c3-target c3-target-Direct-Sales\"><g class=\" c3-shapes c3-shapes-Direct-Sales c3-arcs c3-arcs-Direct-Sales\"><path class=\" c3-shape c3-shape c3-arc c3-arc-Direct-Sales\" transform=\"\" style=\"fill: rgb(237, 242, 246); cursor: pointer;\" d=\"M7.242255008457659e-15,-118.27499999999999A118.27499999999999,118.27499999999999 0 0,1 78.43083240343007,88.53010873993695L66.49462455509575,75.05691527285713A100.27499999999999,100.27499999999999 0 0,0 6.140072889225042e-15,-100.27499999999999Z\"></path></g><text dy=\".35em\" class=\"\" transform=\"translate(88.47123688289395,-33.55271441196473)\" style=\"opacity: 1; text-anchor: middle; pointer-events: none;\"></text></g><g class=\"c3-chart-arc c3-target c3-target-Referral-Sales\"><g class=\" c3-shapes c3-shapes-Referral-Sales c3-arcs c3-arcs-Referral-Sales\"><path class=\" c3-shape c3-shape c3-arc c3-arc-Referral-Sales\" transform=\"\" style=\"fill: rgb(95, 118, 232); cursor: pointer;\" d=\"M78.43083240343007,88.53010873993695A118.27499999999999,118.27499999999999 0 0,1 -78.43083240342997,88.53010873993702L-66.49462455509568,75.0569152728572A100.27499999999999,100.27499999999999 0 0,0 66.49462455509575,75.05691527285713Z\"></path></g><text dy=\".35em\" class=\"\" transform=\"translate(4.781352504277906e-14,94.62)\" style=\"opacity: 1; text-anchor: middle; pointer-events: none;\"></text></g><g class=\"c3-chart-arc c3-target c3-target-Afilliate-Sales\"><g class=\" c3-shapes c3-shapes-Afilliate-Sales c3-arcs c3-arcs-Afilliate-Sales\"><path class=\" c3-shape c3-shape c3-arc c3-arc-Afilliate-Sales\" transform=\"\" style=\"fill: rgb(255, 79, 112); cursor: pointer;\" d=\"M-97.33841673857228,-67.18785791962735A118.27499999999999,118.27499999999999 0 0,1 -1.2677606761540528e-13,-118.27499999999999L-1.0748230970310517e-13,-100.27499999999999A100.27499999999999,100.27499999999999 0 0,0 -82.52470715248646,-56.96269247846656Z\"></path></g><text dy=\".35em\" class=\"\" transform=\"translate(-43.97210653878152,-83.78184914730666)\" style=\"opacity: 1; text-anchor: middle; pointer-events: none;\"></text></g><g class=\"c3-chart-arc c3-target c3-target-Indirect-Sales\"><g class=\" c3-shapes c3-shapes-Indirect-Sales c3-arcs c3-arcs-Indirect-Sales\"><path class=\" c3-shape c3-shape c3-arc c3-arc-Indirect-Sales\" transform=\"\" style=\"fill: rgb(1, 202, 241); cursor: pointer;\" d=\"M-78.43083240342997,88.53010873993702A118.27499999999999,118.27499999999999 0 0,1 -97.33841673857228,-67.18785791962735L-82.52470715248646,-56.96269247846656A100.27499999999999,100.27499999999999 0 0,0 -66.49462455509568,75.0569152728572Z\"></path></g><text dy=\".35em\" class=\"\" transform=\"translate(-93.93011366715785,11.405180685758795)\" style=\"opacity: 1; text-anchor: middle; pointer-events: none;\"></text></g></g><g class=\"c3-chart-texts\"><g class=\"c3-chart-text c3-target c3-target-Direct-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-texts c3-texts-Direct-Sales\"></g></g><g class=\"c3-chart-text c3-target c3-target-Referral-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-texts c3-texts-Referral-Sales\"></g></g><g class=\"c3-chart-text c3-target c3-target-Afilliate-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-texts c3-texts-Afilliate-Sales\"></g></g><g class=\"c3-chart-text c3-target c3-target-Indirect-Sales\" style=\"opacity: 1; pointer-events: none;\"><g class=\" c3-texts c3-texts-Indirect-Sales\"></g></g></g></g><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-grid)\" class=\"c3-grid c3-grid-lines\"><g class=\"c3-xgrid-lines\"></g><g class=\"c3-ygrid-lines\"></g></g><g class=\"c3-axis c3-axis-x\" clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-xaxis)\" transform=\"translate(0,259)\" style=\"visibility: visible; opacity: 0;\"><text class=\"c3-axis-x-label\" transform=\"\" style=\"text-anchor: end;\" x=\"565.6000366210938\" dx=\"-0.5em\" dy=\"-0.5em\"></text><g class=\"tick\" transform=\"translate(283, 0)\" style=\"opacity: 1;\"><line x1=\"0\" x2=\"0\" y2=\"6\"></line><text x=\"0\" y=\"9\" transform=\"\" style=\"text-anchor: middle; display: block;\"><tspan x=\"0\" dy=\".71em\" dx=\"0\">0</tspan></text></g><path class=\"domain\" d=\"M0,6V0H565.6000366210938V6\"></path></g><g class=\"c3-axis c3-axis-y\" clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-yaxis)\" transform=\"translate(0,0)\" style=\"visibility: visible; opacity: 0;\"><text class=\"c3-axis-y-label\" transform=\"rotate(-90)\" style=\"text-anchor: end;\" x=\"0\" dx=\"-0.5em\" dy=\"1.2em\"></text><g class=\"tick\" transform=\"translate(0,238)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">10</tspan></text></g><g class=\"tick\" transform=\"translate(0,209)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">12</tspan></text></g><g class=\"tick\" transform=\"translate(0,181)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">14</tspan></text></g><g class=\"tick\" transform=\"translate(0,152)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">16</tspan></text></g><g class=\"tick\" transform=\"translate(0,123)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">18</tspan></text></g><g class=\"tick\" transform=\"translate(0,95)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">20</tspan></text></g><g class=\"tick\" transform=\"translate(0,66)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">22</tspan></text></g><g class=\"tick\" transform=\"translate(0,37)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">24</tspan></text></g><g class=\"tick\" transform=\"translate(0,9)\" style=\"opacity: 1;\"><line x2=\"-6\"></line><text x=\"-9\" y=\"0\" style=\"text-anchor: end;\"><tspan x=\"-9\" dy=\"3\">26</tspan></text></g><path class=\"domain\" d=\"M-6,1H0V259H-6\"></path></g><g class=\"c3-axis c3-axis-y2\" transform=\"translate(565.6000366210938,0)\" style=\"visibility: hidden; opacity: 0;\"><text class=\"c3-axis-y2-label\" transform=\"rotate(-90)\" style=\"text-anchor: end;\" x=\"0\" dx=\"-0.5em\" dy=\"-0.5em\"></text><g class=\"tick\" transform=\"translate(0,259)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0</tspan></text></g><g class=\"tick\" transform=\"translate(0,234)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.1</tspan></text></g><g class=\"tick\" transform=\"translate(0,208)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.2</tspan></text></g><g class=\"tick\" transform=\"translate(0,182)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.3</tspan></text></g><g class=\"tick\" transform=\"translate(0,156)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.4</tspan></text></g><g class=\"tick\" transform=\"translate(0,130)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.5</tspan></text></g><g class=\"tick\" transform=\"translate(0,105)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.6</tspan></text></g><g class=\"tick\" transform=\"translate(0,79)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.7</tspan></text></g><g class=\"tick\" transform=\"translate(0,53)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.8</tspan></text></g><g class=\"tick\" transform=\"translate(0,27)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">0.9</tspan></text></g><g class=\"tick\" transform=\"translate(0,1)\" style=\"opacity: 1;\"><line x2=\"6\" y2=\"0\"></line><text x=\"9\" y=\"0\" style=\"text-anchor: start;\"><tspan x=\"9\" dy=\"3\">1</tspan></text></g><path class=\"domain\" d=\"M6,1H0V259H6\"></path></g></g><g transform=\"translate(0.5,283.5)\" style=\"visibility: hidden;\"><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-subchart)\" class=\"c3-chart\"><g class=\"c3-chart-bars\"></g><g class=\"c3-chart-lines\"></g></g><g clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip)\" class=\"c3-brush\" style=\"pointer-events: all; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"><rect class=\"background\" x=\"0\" width=\"326.38751220703125\" style=\"visibility: hidden; cursor: crosshair;\"></rect><rect class=\"extent\" x=\"0\" width=\"0\" style=\"cursor: move;\"></rect><g class=\"resize e\" transform=\"translate(0,0)\" style=\"cursor: ew-resize; display: none;\"><rect x=\"-3\" width=\"6\" height=\"6\" style=\"visibility: hidden;\"></rect></g><g class=\"resize w\" transform=\"translate(0,0)\" style=\"cursor: ew-resize; display: none;\"><rect x=\"-3\" width=\"6\" height=\"6\" style=\"visibility: hidden;\"></rect></g></g><g class=\"c3-axis-x\" transform=\"translate(0,0)\" clip-path=\"url(file:///D:/4twin/spring/template/kad/demo.adminmart.com/minimalism-lite-master/src/html/index.html#c3-1670959740832-clip-xaxis)\" style=\"visibility: hidden; opacity: 0;\"><g class=\"tick\" transform=\"translate(283, 0)\" style=\"opacity: 1;\"><line x1=\"0\" x2=\"0\" y2=\"6\"></line><text x=\"0\" y=\"9\" transform=\"\" style=\"text-anchor: middle; display: block;\"><tspan x=\"0\" dy=\".71em\" dx=\"0\">0</tspan></text></g><path class=\"domain\" d=\"M0,6V0H565.6000366210938V6\"></path></g></g><g transform=\"translate(0,263)\"><g class=\"c3-legend-item c3-legend-item-Direct-Sales\" style=\"visibility: hidden; cursor: pointer; opacity: 1;\"><text x=\"14\" y=\"9\" style=\"pointer-events: none;\">Direct Sales</text><rect class=\"c3-legend-item-event\" x=\"0\" y=\"-5\" width=\"0\" height=\"0\" style=\"fill-opacity: 0;\"></rect><line class=\"c3-legend-item-tile\" x1=\"-2\" y1=\"4\" x2=\"8\" y2=\"4\" stroke-width=\"10\" style=\"stroke: rgb(237, 242, 246); pointer-events: none;\"></line></g><g class=\"c3-legend-item c3-legend-item-Referral-Sales\" style=\"visibility: hidden; cursor: pointer; opacity: 1;\"><text x=\"14\" y=\"9\" style=\"pointer-events: none;\">Referral Sales</text><rect class=\"c3-legend-item-event\" x=\"0\" y=\"-5\" width=\"0\" height=\"0\" style=\"fill-opacity: 0;\"></rect><line class=\"c3-legend-item-tile\" x1=\"-2\" y1=\"4\" x2=\"8\" y2=\"4\" stroke-width=\"10\" style=\"stroke: rgb(95, 118, 232); pointer-events: none;\"></line></g><g class=\"c3-legend-item c3-legend-item-Afilliate-Sales\" style=\"visibility: hidden; cursor: pointer; opacity: 1;\"><text x=\"14\" y=\"9\" style=\"pointer-events: none;\">Afilliate Sales</text><rect class=\"c3-legend-item-event\" x=\"0\" y=\"-5\" width=\"0\" height=\"0\" style=\"fill-opacity: 0;\"></rect><line class=\"c3-legend-item-tile\" x1=\"-2\" y1=\"4\" x2=\"8\" y2=\"4\" stroke-width=\"10\" style=\"stroke: rgb(255, 79, 112); pointer-events: none;\"></line></g><g class=\"c3-legend-item c3-legend-item-Indirect-Sales\" style=\"visibility: hidden; cursor: pointer; opacity: 1;\"><text x=\"14\" y=\"9\" style=\"pointer-events: none;\">Indirect Sales</text><rect class=\"c3-legend-item-event\" x=\"0\" y=\"-5\" width=\"0\" height=\"0\" style=\"fill-opacity: 0;\"></rect><line class=\"c3-legend-item-tile\" x1=\"-2\" y1=\"4\" x2=\"8\" y2=\"4\" stroke-width=\"10\" style=\"stroke: rgb(1, 202, 241); pointer-events: none;\"></line></g></g><text class=\"c3-title\" x=\"282.8000183105469\" y=\"0\"></text></svg><div class=\"c3-tooltip-container\" style=\"position: absolute; pointer-events: none; display: none; top: 96.9px; left: 191.5px;\"><table class=\"c3-tooltip\"><tbody><tr class=\"c3-tooltip-name--Indirect-Sales\"><td class=\"name\"><span style=\"background-color:#01caf1\"></span>Indirect Sales</td><td class=\"value\">23.1%</td></tr></tbody></table></div></div>\r\n    <ul class=\"list-style-none mb-0\">\r\n        <li>\r\n            <i class=\"fas fa-circle text-primary font-10 mr-2\"></i>\r\n            <span class=\"text-muted\">Direct Sales</span>\r\n            <span class=\"text-dark float-right font-weight-medium\">$2346</span>\r\n        </li>\r\n        <li class=\"mt-3\">\r\n            <i class=\"fas fa-circle text-danger font-10 mr-2\"></i>\r\n            <span class=\"text-muted\">Referral Sales</span>\r\n            <span class=\"text-dark float-right font-weight-medium\">$2108</span>\r\n        </li>\r\n        <li class=\"mt-3\">\r\n            <i class=\"fas fa-circle text-cyan font-10 mr-2\"></i>\r\n            <span class=\"text-muted\">Affiliate Sales</span>\r\n            <span class=\"text-dark float-right font-weight-medium\">$1204</span>\r\n        </li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Departement } from 'src/app/Models/Departement';\r\nimport { FileHandle } from 'src/app/Models/file-handle.model';\r\nimport { universite } from 'src/app/Models/Universite';\r\nimport { ServiceUniversiteService } from 'src/app/serviceUniversite/service-universite.service';\r\n\r\n@Component({\r\n  selector: 'app-update-universite',\r\n  templateUrl: './update-universite.component.html',\r\n  styleUrls: ['./update-universite.component.css']\r\n})\r\nexport class UpdateUniversiteComponent implements OnInit {\r\n  list:any[]=[];\r\n  selectedObject !:Departement;\r\n  theValue!:any;\r\n  myUniv!:any;\r\n  reactiveForm=this.fb.group(\r\n    {\r\n       idUniv:[''],\r\n      nomUniv:[''],\r\n      departements:[],\r\n      images:[]\r\n    }\r\n  );\r\n  u!:universite;\r\n\r\n  constructor(private fb:FormBuilder,private actR: ActivatedRoute,private R:Router,private serviceUniv:ServiceUniversiteService,private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.serviceUniv.getDepartById(this.actR.snapshot.params[\"idUniv\"]).subscribe(data=>{\r\n      this.myUniv=data;\r\n      \r\n    this.reactiveForm.patchValue({idUniv:this.myUniv.idUniv, nomUniv:this.myUniv.nomUniv});\r\n    });\r\n    \r\n\r\n  //  this.image();\r\n  \r\nconsole.log(this.myUniv)\r\n  }\r\n  get idUniv(){\r\n    return this.reactiveForm.get('idUniv')\r\n  }\r\n  get nomUniv(){\r\n    return this.reactiveForm.get('nomUniv');\r\n  \r\n  }\r\n  removeImage(idImage:number){\r\n    this.serviceUniv.deleteImg(this.myUniv.idUniv,idImage).subscribe( date=>\r\n      location.reload()\r\n    );\r\n    //this.R.navigate(['update/',this.myUniv.idUniv]);\r\n   \r\n  }\r\n  numSequence(n: number): Array<number> {\r\n    return Array(n);\r\n  }\r\n  update(){\r\n   this.myUniv.nomUniv=this.reactiveForm.value.nomUniv;\r\n    this.serviceUniv.UpdateDepart(this.myUniv.idUniv,this.myUniv).subscribe(data=>{\r\n\r\n      this.R.navigate(['listUniv']);\r\n    }\r\n    )\r\n    \r\n  }\r\n  onFileSelected(event:any){\r\n    console.log(event);\r\n if(event.target.files){\r\n   const file=event.target.files[0]; \r\n   const FileHandle:FileHandle={\r\n     file: file,\r\n     url:this.sanitizer.bypassSecurityTrustUrl(\r\n       window.URL.createObjectURL(file)\r\n     )\r\n   }\r\n this.myUniv.images.push(FileHandle);\r\n alert(this.myUniv.images)\r\n }\r\n   }\r\n\r\n  public image(){\r\n    \r\n    const images : any[]=this.myUniv.images;\r\n    const univImagesToFileHandle:FileHandle[]=[];\r\n    for(let i=0;i<images.length;i++){\r\n      const imageFileData=images[i];\r\n      const imageBlob=this.dataURLtoBlob(imageFileData.picBytes,imageFileData.type);\r\n      const imageFile=new File([imageBlob],imageFileData.name,{type:imageFileData.type});\r\n      const finalFileHandle:FileHandle=  {\r\n        file:imageFile,\r\n        url:this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(imageFile))\r\n      };\r\n      univImagesToFileHandle.push(finalFileHandle);\r\n\r\n    }\r\nthis.myUniv.images=univImagesToFileHandle;\r\n    alert(this.myUniv.images)\r\n  }\r\n   public dataURLtoBlob(picBytes:any,imageType:any){\r\n    const byteString=window.atob(picBytes);\r\n    const arrayBuffer=new ArrayBuffer(byteString.length);\r\n    const intBArray=new Uint8Array(arrayBuffer);\r\n    for(let i=0;i<byteString.length;i++){\r\n      intBArray[i]=byteString.charCodeAt(i);\r\n    }\r\n    const blob =new Blob([intBArray],{type:imageType});\r\n    return blob;\r\n   }\r\n}\r\n","<form [formGroup]=\"reactiveForm\">\r\n\r\n    <div class=\"card-body\">\r\n        <h4 class=\"card-title\">Nom Universite</h4>\r\n        <div class=\"mt-4\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\"formControlName=\"nomUniv\" class=\"form-control\" name=\"nomUniv\"  id=\"nomUniv\">\r\n            </div>\r\n            <div class=\"alter alter-danger\" id=\"updateField\" *ngIf=\"nomUniv?.errors?.['required'] && nomUniv?.touched\" > idDepart is required</div>\r\n    \r\n        </div >\r\n    </div>  \r\n    <div id=\"imagecontainer\">\r\n        <div *ngFor=\"let filehandle of myUniv.images\" >\r\n            <div id=\"divImg\">\r\n                            <img id=\"univImg\" src=\"data:{{filehandle.type}};base64,{{filehandle.picByte}}\">\r\n                \r\n                \r\n        \r\n                <span class=\"btn-remove-image\" (click)=\"removeImage(filehandle.imageId)\">\r\n                    <button mat-mini-fab aria-label=\"Delete\">\r\n                        <mat-icon>close</mat-icon>\r\n                      </button>\r\n                </span>\r\n                \r\n                    \r\n            </div>\r\n             \r\n         </div>\r\n    </div>\r\n \r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"update()\">update </button>\r\n    \r\n</form>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Departement } from '../Models/Departement';\r\nimport { universite } from '../Models/Universite';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceUniversiteService {\r\n  urlApi = 'http://localhost:8189/kaddem/univer/all'; \r\n  urlDel='http://localhost:8189/kaddem/univer/delete/' ;\r\n  urlAdd='http://localhost:8189/kaddem/univer/add' ;\r\n  addwithimage='http://localhost:8189/kaddem/univer/addWithImage';\r\n  urlUpdate='http://localhost:8189/kaddem/univer/update';\r\n  getbyid=\"http://localhost:8189/kaddem/univer/get/\"\r\n  urlgetmaxid='http://localhost:8189/kaddem/univer/maxid';\r\n  relation='http://localhost:8189/kaddem/dep/assignUniversiteToDepartement/';\r\n  listdepart='http://localhost:8189/kaddem/univer/listdepart';\r\n  pagination='http://localhost:8189/kaddem/univer/all?pageNumber='\r\n  getimage=\"http://localhost:8189/kaddem/univer/ListImagebyIduniv/\";\r\n  deleteImage=\"http://localhost:8189/kaddem/univer/deleteImage/\";\r\nd:any;\r\n  Universite=[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getData():Observable<universite[]> {\r\n    return this.http.get<universite[]>(this.urlApi);\r\n}\r\ngetWtithpagination(i :number){\r\n\r\n\r\n  return this.http.get<universite[]>(this.pagination+i);\r\n}\r\n  \r\nAddUniv(u: universite):Observable<universite>{\r\n//alert(this.getmaxid())\r\n  return this.http.post<universite>(this.urlAdd,u)\r\n\r\n }\r\n getmaxid(){\r\nreturn this.http.get<any>(this.urlgetmaxid);\r\n }\r\n relationdepart(idUniv:number,idDepart:number){\r\nreturn this.http.put(this.relation+idUniv+\"/\"+idDepart,this.d);\r\n }\r\ndeleteImg(idUniv:number,idImage:number){\r\nreturn this.http.put(this.deleteImage+idUniv+\"/\"+idImage,this.d);\r\n}\r\n addWithImage(u: FormData){\r\n  return this.http.post<universite>(this.addwithimage,u);\r\n }\r\n delete(id:number){\r\n   \r\n  return  this.http.delete(this.urlDel+id)\r\n      ;\r\n\r\n} \r\n \r\nlistedepart():Observable<Departement[]>{\r\nreturn this.http.get<Departement[]>(this.listdepart);\r\n}\r\ngetDepartById(id:Number){\r\n  return this.http.get<universite>(this.getbyid+id);\r\n}\r\ngetImageById(id:Number){\r\n  return this.http.get<any>(this.getimage+id);\r\n}\r\nUpdateDepart(id:number, d: Departement){\r\n  \r\n  return this.http.put<Departement>(this.urlUpdate,d);\r\n  \r\n }\r\n}\r\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = \".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\";\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() { return this._rowspan; }\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() { return this._colspan; }\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-grid-tile-content\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() { return this._cols; }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() { return this._gutter; }\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() { return this._rowHeight; }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵfac = function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); };\nMatGridListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList, MatGridTile, MatGridTileText, MatLineModule,\n        MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n"],"names":[],"sourceRoot":"webpack:///"}